@model OneToManyDynamic.Models.Product
@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
<div class="container-fluid" id="dynamicFieldsContainer">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.description, new { @class = "form-control", rows = 4 })

            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    @foreach (var item in Model.Sizes)
    {
        <input name="Sizes.Index" type="hidden" class="form-control" value="@item.Id" />
        <input name="Sizes[@item.Id].Id" type="hidden" class="form-control" value="@item.Id" />
        <input name="Sizes[@item.Id].PId" type="hidden" class="form-control" value="@item.PId" />
        <label class="control-label">Name</label>
        <input name="Sizes[@item.Id].name" type="text" class="form-control" value="@item.name" />
        <label class="control-label">Price</label>
        <input name="Sizes[@item.Id].Prict" type="text" class="form-control" value="@item.Prict" />

        <br />

    }

</div>
   
    <button id="saveProduct" type="submit" class="btn btn-success">Save</button>
    <h2>MultipleEdit</h2>


}


<!-- jQuery and Bootstrap scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
    $(document).ready(function () {


        var fieldIndex = 1; // To keep track of the number of fields

        // Function to add a new field group
        $("#addField").click(function () {
            var newFieldGroup = `
               <div class="form-group row" id="fieldGroup${fieldIndex}">
                    <input type="text" name= "Sizes.Index" value =${fieldIndex}>
                 <div class="col-md-3">
                     <label class="control-label">Name</label>
                     <input type="text" name="Sizes[${fieldIndex}].Name" class="form-control" />
                 </div>
                  <div class="col-md-3">
                     <label class="control-label">Price</label>
                      <input type="text" name="Sizes[${fieldIndex}].Prict" class="form-control" />
                  </div>
                 <div class="col-md-12 text-right">
                    <button type="button" class="btn btn-danger removeField" data-id="${fieldIndex}">Remove</button>
                 </div>

              </div>
            `;


            

        });





        // Function to remove a field group
        $(document).on("click", ".removeField", function () {
            var id = $(this).data("id");
            $("#fieldGroup" + id).remove();
        });


    });
</script>


